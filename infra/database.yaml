services:
  postgres:
    image: postgres:17.4 # use the latest image.
    container_name: postgres
    restart: unless-stopped
    environment: # set required env variables to access postgres
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
      DATABASE_NAME: ${DATABASE_NAME:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - ${DATABASE_PORT:-5432}:5432
    volumes: # optional to preserve database after container is deleted.
      - ./database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-postgres}"]
      interval: 1s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-test@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-postgres}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      PFADMIN_LISTEN_PORT: 8080
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgpass:/pgpass
    depends_on:
      - postgres
