# shellcheck shell=bash
# shellcheck disable=SC2148,SC2035,SC1083
# set dotenv-load

start-db: _generate-pgadmin-config
    #!/usr/bin/env bash
    set -euo pipefail
    nerdctl compose --env-file .env -f infra/database.yaml up --detach
    # Wait for PostgreSQL to be ready
    sleep 2
    # Create the symbology database only if it doesn't exist
    nerdctl exec postgres psql -U "${DATABASE_USER}" \
      -c "SELECT 1 FROM pg_database WHERE datname = '${DATABASE_NAME}'" | grep -q 1 \
      || nerdctl exec postgres psql -U "${DATABASE_USER}" -c "CREATE DATABASE ${DATABASE_NAME};"

stop-db:
    nerdctl compose -f infra/database.yaml down

logs-db *FLAGS: # just logs-db -f
    nerdctl compose -f infra/database.yaml logs {{FLAGS}}

_generate-pgadmin-config:
    #!/usr/bin/env bash
    set -euo pipefail

    mkdir -p infra/pgadmin

    # Generate pgadmin servers.json
    jq -n \
      --arg name "Symbology Database" \
      --arg host "${DATABASE_HOST:-localhost}" \
      --arg port "${DATABASE_PORT:-5432}" \
      --arg db "${DATABASE_NAME:-postgres}" \
      --arg user "${DATABASE_USER:-postgres}" \
      '{
        "Servers": {
          "1": {
            "Name": $name,
            "Group": "Servers",
            "Host": $host,
            "Port": $port | tonumber ,
            "MaintenanceDB": "postgres",
            "Username": $user,
            "SSLMode": "prefer",
            "PassFile": "/pgpass",
            "Comment": "Symbology application database"
          }
        }
      }' > infra/pgadmin/servers.json

    # Generate pgpass file from environment variables
    echo \
      "${DATABASE_HOST:-localhost}:${DATABASE_PORT:-5432}:*:${DATABASE_USER:-postgres}:${DATABASE_PASSWORD:-postgres}" \
      > infra/pgadmin/pgpass

    # Set correct permissions for pgpass file
    chmod 600 infra/pgadmin/pgpass

    echo "PGAdmin configuration files created successfully"
