# shellcheck shell=bash
# shellcheck disable=SC2148,SC2035,SC1083

_create_venv:
    #!/usr/bin/env bash
    if [[ ! -d .venv ]]; then
        echo "_create_venv at $(pwd)"
        uv venv -p 3.13 .venv
        uv pip install -r requirements.lock
    fi

deps:
    uv pip compile pyproject.toml -o requirements.lock
    uv pip install -r requirements.lock

run *ARGS: _create_venv
    uv run -m src.api.main

ingest *ARGS: # Run with defaults (AAPL, 2022)
    uv run -m src.bin.edgar_ingestion {{ARGS}}

generate *ARGS: # Run with defaults (AAPL, 2022)
    uv run -m src.bin.llm_generate {{ARGS}}

logging *ARGS: # Run with defaults (AAPL, 2022)
    uv run -m src.bin.logging {{ARGS}}
# summarize:
#     uv run run.py summarize --document-id 3 --template-id 2 --temperature 0.7

# test and lint outputs are logged to make it easy to include as llm context
test *ARGS: _create_venv
    # note: we're about to refactor ingestion, so removing it for now' --cov=src.ingestion
    uv run -m pytest --cov=src.database --cov=src.api --cov=src.llm src/tests/  {{ARGS}} | tee test.log

lint *FLAGS: # lint --fix
    ~/.local/share/nvim/mason/bin/ruff check . {{FLAGS}} | tee lint.log


build:
    nerdctl build -t symbology-api:latest .
